/* CSS Custom Properties for theming */
:root {
  --primary-color: #2563eb;
  --primary-hover: #1d4ed8;
  --secondary-color: #64748b;
  --secondary-hover: #475569;
  --success-color: #10b981;
  --warning-color: #f59e0b;
  --error-color: #ef4444;
  --error-hover: #dc2626;
  --info-color: #06b6d4;
  
  --bg-primary: #ffffff;
  --bg-secondary: #f8fafc;
  --bg-tertiary: #e2e8f0;
  
  --text-primary: #1e293b;
  --text-secondary: #64748b;
  --text-muted: #94a3b8;
  
  --border-color: #e2e8f0;
  --border-hover: #cbd5e1;
  
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  
  --radius-sm: 0.25rem;
  --radius-md: 0.375rem;
  --radius-lg: 0.5rem;
  
  --font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  --font-mono: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: var(--font-family);
  font-size: 14px;
  line-height: 1.5;
  color: var(--text-primary);
  background-color: var(--bg-secondary);
  overflow: hidden;
}

/* Layout */
#app {
  height: 100vh;
  display: flex;
  flex-direction: column;
}

/* Header */
.header {
  background-color: var(--bg-primary);
  border-bottom: 1px solid var(--border-color);
  padding: 0.75rem 1rem;
  flex-shrink: 0;
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 100%;
}

.logo h1 {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--primary-color);
}

.header-actions {
  display: flex;
  gap: 0.5rem;
}

/* Toolbar */
.toolbar {
  background-color: var(--bg-primary);
  border-bottom: 1px solid var(--border-color);
  padding: 0.5rem 1rem;
  display: flex;
  gap: 1rem;
  align-items: center;
  flex-shrink: 0;
}

.toolbar-section {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.toolbar-section:not(:last-child)::after {
  content: '';
  width: 1px;
  height: 1.5rem;
  background-color: var(--border-color);
  margin-left: 1rem;
}

/* Main Content */
.main-content {
  flex: 1;
  display: flex;
  min-height: 0;
}

.canvas-container {
  flex: 1;
  position: relative;
  background-color: var(--bg-secondary);
  overflow: hidden;
}

.erd-canvas {
  width: 100%;
  height: 100%;
  position: relative;
  cursor: grab;
}

.erd-canvas:active {
  cursor: grabbing;
}

/* Property Panel */
.property-panel {
  width: 300px;
  background-color: var(--bg-primary);
  border-left: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  transform: translateX(100%);
  transition: transform 0.3s ease;
}

.property-panel.open {
  transform: translateX(0);
}

.panel-header {
  padding: 1rem;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.panel-header h3 {
  font-size: 1rem;
  font-weight: 600;
}

.panel-content {
  flex: 1;
  padding: 1rem;
  overflow-y: auto;
}

.panel-placeholder {
  color: var(--text-muted);
  text-align: center;
  margin-top: 2rem;
}

/* Status Bar */
.status-bar {
  background-color: var(--bg-primary);
  border-top: 1px solid var(--border-color);
  padding: 0.5rem 1rem;
  display: flex;
  gap: 1rem;
  font-size: 0.875rem;
  color: var(--text-secondary);
  flex-shrink: 0;
}

.status-section:not(:last-child)::after {
  content: '|';
  margin-left: 1rem;
  color: var(--border-color);
}

/* Welcome Message */
.welcome-message {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--bg-secondary);
  z-index: 1;
}

.welcome-content {
  text-align: center;
  padding: 2rem;
}

.welcome-content h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--text-primary);
}

.welcome-content p {
  color: var(--text-secondary);
  margin-bottom: 1.5rem;
}

/* Loading Overlay */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.9);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 10;
}

.loading-spinner {
  width: 2rem;
  height: 2rem;
  border: 2px solid var(--border-color);
  border-top: 2px solid var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Tooltip */
.tooltip {
  position: absolute;
  background-color: var(--text-primary);
  color: white;
  padding: 0.5rem 0.75rem;
  border-radius: var(--radius-md);
  font-size: 0.875rem;
  z-index: 1000;
  pointer-events: none;
  box-shadow: var(--shadow-lg);
}

.tooltip::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: var(--text-primary) transparent transparent transparent;
}

/* Responsive Design */
@media (max-width: 768px) {
  .toolbar {
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .toolbar-section::after {
    display: none;
  }
  
  .property-panel {
    width: 100%;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
  }
  
  .header-content {
    flex-direction: column;
    gap: 0.5rem;
  }
}

@media (max-width: 480px) {
  .toolbar {
    padding: 0.25rem 0.5rem;
  }
  
  .header {
    padding: 0.5rem;
  }
  
  .status-bar {
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .status-section::after {
    display: none;
  }
}

/* 
  Add this to your main CSS file.
  This is the most critical rule. It tells the browser that the SVG
  and its contents should not be the target of pointer events that
  could initiate a native drag, but D3's listeners will still work.
*/
.table-group {
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    
    /* This can sometimes help by ensuring child elements
       don't accidentally capture events from the group. */
    pointer-events: none;
}

/*
  Since the group now has 'pointer-events: none', we must re-enable
  them on the visible parts that the user needs to interact with.
  The 'all' value is a simple way to reset it.
*/
.table-group > * {
    pointer-events: all;
}